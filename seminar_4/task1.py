
def add(a, b):
    """
    Чистые функции (Pure Functions): Они не изменяют состояние программы или внешние переменные.
    """
    return a + b


result = add(3, 4)  # В результате нет побочных эффектов

"""
Неизменяемость (Immutable Data): после создания объекта его нельзя изменить. 
Вместо этого создается новый объект с измененным состоянием.
"""
# Создание нового списка с измененным элементом
original_list = [1, 2, 3]
new_list = [x * 2 for x in original_list]  # Не изменяет оригинальный список


def apply(func, x):
    """
    # Применение функции square через функцию apply
    """
    return func(x)  # Функция, которая принимает функцию как аргумент


def square(x):  # Обычная функция, которая возводит число в квадрат
    return x ** 2


result_1 = apply(square, 5)  # Применение функции square через функцию apply


def factorial(n):
    """
    Функции высших порядков (Higher-Order Functions):
    Это функции, которые принимают другие функции в качестве аргументов
    или возвращают их в качестве результатов.
    :param n:
    :return:
    """
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)


result_2 = factorial(5)  # Вычисление факториала через рекурсию


# Функция, которая возводит число в куб
def cube(x):
    return x ** 3


"""
Функции первого класса (First-Class Functions): 
Функции рассматриваются как обычные значения и могут быть присвоены переменным, 
переданы как аргументы и возвращены из других функций.
Терёшин Роман text wrap
"""
# Присвоение функций переменным
my_function1 = square
my_function2 = cube

# Использование функций как аргументов
result1 = apply(my_function1, 5)  # Вызов apply с функцией square
result2 = apply(my_function2, 3)  # Вызов apply с функцией cube

print(result1)  # Вывод: 25 (5 в квадрате)
print(result2)  # Вывод: 27 (3 в кубе)

"""
Лямбда-функции: Лямбда-функции (анонимные функции) позволяют создавать короткие
и одноразовые функции без явного определения имени функции.
"""
add1 = lambda x, y: x + y  # Лямбда-функция для сложения двух чисел
result_3 = add(3, 4)  # Вызов лямбда-функции
